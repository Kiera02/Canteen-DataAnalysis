# Load the required libraries
library(nnet)
library(ggplot2)
library(smotefamily)

# Read the CSV data file
respond <- read.csv("Compulsory Elective (Responses) - Form Responses 1.csv")

# Extract independent variables
independent_vars <- respond[, c("Food.Quality", "Service.Quality", "Affordability", "Hygiene", "Food.Options", "Special.Dietary")]

# Define categories based on Satisfied
categories <- as.factor(cut(respond$Satisfied, breaks = c(0, 2, 4, 6), labels = c(1, 2, 3), include.lowest = TRUE))

# Combine categories and independent variables into one dataset
model_data <- data.frame(categories, independent_vars)

# Split the data into training and testing sets
set.seed(123)
train_indices <- sample(1:nrow(model_data), 0.8 * nrow(model_data))
train_data <- model_data[train_indices, ]
test_data <- model_data[-train_indices, ]

# Perform ADASYN to oversample the minority classes
train_data_oversampled <- ADASYN(categories ~ ., data = train_data, p = 0.5)

# Build the multinomial model on the oversampled data
model <- multinom(categories ~ ., data = train_data_oversampled)

# Make predictions on the test data
predicted_categories <- predict(model, newdata = test_data, type = "class")

# Create a comparison data frame
comparison_df <- data.frame(Predicted = predicted_categories, Real = test_data$categories)
comparison_df$Index <- 1:nrow(comparison_df)

# Plot the predicted and real categories using a line graph
ggplot(comparison_df, aes(x = Index, y = Predicted, group = 1)) +
  geom_line(color = "blue", linetype = "dashed") +
  geom_line(aes(y = Real), color = "red") +
  labs(x = "Index", y = "Category", title = "Predicted vs. Real Categories") +
  scale_y_discrete(breaks = c(1, 2, 3), labels = c("Unsatisfied", "Neutral", "Satisfied")) +
  theme_minimal()

# Display a summary of the multinomial model
summary(model)
